{"ast":null,"code":"import connect_auth from './connect_auth';\nclass Auth {\n  constructor(connect) {\n    this._baseUrl = connect.baseUrl;\n  }\n  _checkResponse(result) {\n    if (result.ok) {\n      return result.json();\n    }\n    return Promise.reject(`Ошибка: ${result.status}`);\n  }\n  register(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse);\n  }\n  authorize(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse);\n  }\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst auth = new Auth(connect_auth);\nexport default auth;","map":{"version":3,"names":["connect_auth","Auth","constructor","connect","_baseUrl","baseUrl","_checkResponse","result","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","authorize","checkToken","token","Authorization","auth"],"sources":["/Users/andrei/Desktop/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["import connect_auth from './connect_auth';\n\nclass Auth {\n    constructor(connect) {\n        this._baseUrl = connect.baseUrl;\n    }\n\n    _checkResponse(result) {\n        if (result.ok) {\n            return result.json();\n        }\n        return Promise.reject(`Ошибка: ${result.status}`);\n    }\n\n    register(email, password) {\n        return fetch(`${this._baseUrl}/signup`, {\n          method: 'POST',\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, password })\n        })\n        .then(this._checkResponse)\n      };\n    \n      authorize(email, password) {\n        return fetch(`${this._baseUrl}/signin`, {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, password })\n        })\n        .then(this._checkResponse)\n      };\n    \n      checkToken(token) {\n        return fetch(`${this._baseUrl}/users/me`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then(this._checkResponse)\n      }\n}\n\nconst auth = new Auth(connect_auth);\n\nexport default auth;"],"mappings":"AAAA,OAAOA,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,IAAI,CAAC;EACPC,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;EACnC;EAEAC,cAAc,CAACC,MAAM,EAAE;IACnB,IAAIA,MAAM,CAACC,EAAE,EAAE;MACX,OAAOD,MAAM,CAACE,IAAI,EAAE;IACxB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,MAAM,CAACK,MAAO,EAAC,CAAC;EACrD;EAEAC,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACtB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,SAAQ,EAAE;MACtCa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CACDQ,IAAI,CAAC,IAAI,CAACjB,cAAc,CAAC;EAC5B;EAEAkB,SAAS,CAACV,KAAK,EAAEC,QAAQ,EAAE;IACzB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,SAAQ,EAAE;MACtCa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CACDQ,IAAI,CAAC,IAAI,CAACjB,cAAc,CAAC;EAC5B;EAEAmB,UAAU,CAACC,KAAK,EAAE;IAChB,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,WAAU,EAAE;MACxCa,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCS,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CACDH,IAAI,CAAC,IAAI,CAACjB,cAAc,CAAC;EAC5B;AACN;AAEA,MAAMsB,IAAI,GAAG,IAAI3B,IAAI,CAACD,YAAY,CAAC;AAEnC,eAAe4B,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}