{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/Desktop/mesto-react/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(_ref) {\n  _s();\n  let {\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    onBinClick\n  } = _ref;\n  const [userName, setUserName] = useState(\"\");\n  const [userDescription, setUserDescription] = useState(\"\");\n  const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]);\n\n  // useEffect(() => {\n  //   Promise.all([api.getMe(), api.getCards()])\n  //     .then((userInfo) => {\n  //         setUserName(userInfo.name);\n  //         setUserDescription(userInfo.about);\n  //         setUserAvatar(userInfo.avatar);\n  //     })\n  // })\n\n  useEffect(() => {\n    /* запрос данных пользователя */\n    // Нельзя использовать Promise.all, так как если провалится один из запросов,\n    // весь Promise.all будет rejected.  С точки зрения UX, нельзя показывать пустой экран.\n    // У пользователя создастся впечателение, что вся страница не работает.\n    // Увидев часть страницы, в нашем случае header, пользователь сможет отредактировать свои данные.\n    // Т.о. страница останется функциональной.\n    // Нельзя так же испольовать Promise.allSettled\n    // так как если запрос на user/me провалится, то запрос на карточки выполнится все равно.\n    // В текущей реализации отобразитсья хотя бы информация о пользователе.\n    API.getUser().then(user => {\n      setUserName(user.name);\n      setUserDescription(user.about);\n      setUserAvatar(user.avatar);\n    }) // получили данные пользователя\n    .catch(e => {\n      console.error(e);\n    });\n    API.getInitialCards().then(initialCards => {\n      setCards(initialCards);\n    }) // получили карточки с api\n    .catch(e => {\n      console.error(e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userAvatar,\n          className: \"profile__avatar\",\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onEditAvatar,\n          className: \"profile__avatar-edit-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__user-name\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__user-about\",\n          children: userDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__edit-button\",\n          type: \"button\",\n          onClick: onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"template\", {\n        className: \"cardTemplate\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: onCardClick,\n          onBinClick: onBinClick\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"yJlQcr1ya6ru9mMcMGaBv7rVdwc=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","api","Card","Main","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onBinClick","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","API","getUser","then","user","name","about","avatar","catch","e","console","error","getInitialCards","initialCards","map","card","_id"],"sources":["/Users/andrei/Desktop/mesto-react/src/components/Main.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, onBinClick}) {\nconst [userName, setUserName] = useState(\"\");\nconst [userDescription, setUserDescription] = useState(\"\");\nconst [userAvatar, setUserAvatar] = useState(\"\");\nconst [cards, setCards] = useState([]);\n\n// useEffect(() => {\n//   Promise.all([api.getMe(), api.getCards()])\n//     .then((userInfo) => {\n//         setUserName(userInfo.name);\n//         setUserDescription(userInfo.about);\n//         setUserAvatar(userInfo.avatar);\n//     })\n// })\n\nuseEffect(() => {\n  /* запрос данных пользователя */\n  // Нельзя использовать Promise.all, так как если провалится один из запросов,\n  // весь Promise.all будет rejected.  С точки зрения UX, нельзя показывать пустой экран.\n  // У пользователя создастся впечателение, что вся страница не работает.\n  // Увидев часть страницы, в нашем случае header, пользователь сможет отредактировать свои данные.\n  // Т.о. страница останется функциональной.\n  // Нельзя так же испольовать Promise.allSettled\n  // так как если запрос на user/me провалится, то запрос на карточки выполнится все равно.\n  // В текущей реализации отобразитсья хотя бы информация о пользователе.\n  API.getUser()\n      .then((user) => {\n\n          setUserName(user.name)\n          setUserDescription(user.about)\n          setUserAvatar(user.avatar)\n\n      }) // получили данные пользователя\n\n      .catch( (e) => {\n          console.error(e)\n      })\n\n  API.getInitialCards()\n      .then((initialCards) => {\n          setCards(initialCards)\n      }) // получили карточки с api\n      .catch( (e) => {\n          console.error(e)\n      })\n}, [])\n\n\n    return(\n        <main>\n        <section className=\"profile\">\n          <div className=\"profile__avatar-container\">\n            <img src={userAvatar} className=\"profile__avatar\" alt=\"Аватар\" />\n            <button type=\"button\" onClick={onEditAvatar} className=\"profile__avatar-edit-button\"></button>\n          </div>\n          <div className=\"profile__info\">\n            <h1 className=\"profile__user-name\">{userName}</h1>\n            <p className=\"profile__user-about\">{userDescription}</p>\n            <button className=\"profile__edit-button\" type=\"button\" onClick={onEditProfile}></button>\n          </div>\n          <button className=\"profile__add-button\" type=\"button\" onClick={onAddPlace}></button>\n        </section>\n\n        <section className=\"elements\">\n        <template className=\"cardTemplate\">\n       {cards.map((card) => (\n        < Card key={card._id} card={card} onCardClick={onCardClick} onBinClick={onBinClick} />\n       ))}\n       </template>\n        </section>\n      </main>\n    )\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}